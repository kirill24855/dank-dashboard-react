{"version":3,"sources":["shpLoader.js","components/Globe.jsx","App.js","serviceWorker.js","index.js"],"names":["cache","loadShp","_x","_loadShp","apply","this","arguments","_callee","filePath","response","regenerator_default","a","wrap","_context","prev","next","abrupt","fetch","sent","json","stop","defaultMarkerColor","defaultBorderColor","defaultStickColor","errorStickColor","Globe","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","markerMaterial","THREE","color","markerColor","borderMaterial","borderColor","defaultStickMaterial","errorStickMaterial","stickWidth","xAxis","yAxis","zAxis","origin","animating","draw","bind","assertThisInitialized","animate","numParallels","numMeridians","earth","equatorGeometry","vertices","shift","equatorMesh","rotation","x","Math","PI","add","i","parallelGeometry","cos","parallelMesh","position","y","sin","meridianMesh","geojson","features","length","country","j","geometry","coordinates","part","Array","k","coords","lat","lng","point","push","line","type","material","stickMesh","pivot","set","rotateObjAroundOrigin","gSticks","sticks","gScene","remove","stick","addStick","size","rotateAroundWorldAxis","camera","rot","userData","width","mount","clientWidth","height","clientHeight","gCamera","fovY","fovX","atan","tan","fov","aspect","distance","zoom","z","gRenderer","antialias","setPixelRatio","window","devicePixelRatio","setSize","setClearColor","backgroundColor","rotationRate","isDragging","dragPrev","domElement","addEventListener","e","screenToGlobeCoords","offsetX","offsetY","_this2","onGlobeClick","rotateCamera","document","gAnimation","duration","animationDuration","startTime","startLoc","curProgress","load","tex","map","overdraw","mesh","rotateY","object","loadBorders","addBordersToScene","addMarkersToScene","appendChild","init","prevProps","prevState","snapshot","focusPoint","setState","Date","now","startLat","startLng","stdDist","abs","requestAnimationFrame","console","log","addSticks","curTime","progress","d","render","_this3","react_default","createElement","className","ref","r","p1","p2","p3","threshold","x1","y1","x2","y2","x3","y3","x4","y4","axisNorm","radians","second","rotWorldMatrix","makeRotationAxis","multiply","matrix","setFromRotationMatrix","mouseX","mouseY","mouse","raycaster","setFromCamera","intersects","intersectObject","spherePoint","acos","atan2","t","Component","App","randomizeSticks","total","count","shuffle","slice","toConsumableArray","concat","generateSticks","random","generateStick","setInterval","setupTestEnvironment","style","top","left","onClick","display","Globe_Globe","onChange","handleGlobeChange","b","floor","_ref","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9548ee70.chunk.js","sourcesContent":["let cache = {};\n\nexport default async function loadShp(filePath) {\n\tif (cache[filePath]) return cache[filePath];\n\n\tlet response = await fetch(filePath);\n\tcache[filePath] = await response.json();\n\n\treturn cache[filePath];\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as THREE from \"three\";\nimport loadBorders from \"../shpLoader\";\nimport \"./Globe.css\";\n\n/*\n * Done with globe and country borders\n * TODO Now, looking for a higher-res globe texture, maybe\n * Also need to get data for all states of the US, and maybe other large countries like Russia, Canada, etc\n * TODO Gotta configure some type of networking and listening for data from a server, so as to update the sticks in real time\n * \t\tactually no, bad idea. the super component should do that, and just give the globe what it needs. eNcApSuLaTiOn\n * TODO Add labels to countries and sticks?\n * TODO Make sticks' length represent a number (people or some such)\n * \t\talready kinda happening, the size/length is decided by the super so its up to that component\n * TODO Change appearance of sticks to signify important notifications (errors, closed deals, etc)\n *\n * Write functionality for the FOCUS POINT, to rotate the globe to given coordinates in response to an event (errors, closed deals, etc)\n *\n * Return the (lat, lng) of a click to the parent, maybe along with the country name\n */\n\nlet defaultMarkerColor = 0x9ff9ff;\nlet defaultBorderColor = 0x4cc4ff;\nlet defaultStickColor = 0x4cc4ff;\nlet errorStickColor = 0xff6e59;\n\nexport default class Globe extends Component {\n\n\tstatic propTypes = {\n\t\tbackgroundColor: PropTypes.number,\n\t\tborderColor: PropTypes.number,\n\t\tmarkerColor: PropTypes.number,\n\t\t//countryFillColor: PropTypes.string,\n\n\t\tfovY: PropTypes.number,\n\t\tzoom: PropTypes.number,\n\t\trotationRate: PropTypes.number,\n\n\t\tsticks: PropTypes.array,\n\t\tstickWidth: PropTypes.number,\n\t\tdefaultStickColor: PropTypes.string,\n\t\terrorStickColor: PropTypes.string,\n\n\t\tfocusPoint: PropTypes.object,\n\t\tanimationDuration: PropTypes.number,\n\n\t\tonChange: PropTypes.func.isRequired,\n\t\tonGlobeClick: PropTypes.func.isRequired,\n\t};\n\n\tstate = {\n\t\tmarkerMaterial: new THREE.LineBasicMaterial({color: this.props.markerColor || defaultMarkerColor}),\n\t\tborderMaterial: new THREE.LineBasicMaterial({color: this.props.borderColor || defaultBorderColor}),\n\t\tdefaultStickMaterial: new THREE.MeshPhongMaterial({color: this.props.defaultStickColor || defaultStickColor}),\n\t\terrorStickMaterial: new THREE.MeshPhongMaterial({color: this.props.errorStickColor || errorStickColor}),\n\n\t\tstickWidth: this.props.stickWidth || 0.005,\n\n\t\txAxis: new THREE.Vector3(1, 0, 0),\n\t\tyAxis: new THREE.Vector3(0, 1, 0),\n\t\tzAxis: new THREE.Vector3(0, 0, 1),\n\t\torigin: new THREE.Vector3(0, 0, 0),\n\n\t\tanimating: false,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.draw = this.draw.bind(this);\n\t\tthis.animate = this.animate.bind(this);\n\t}\n\n\t// equator, parallels, and meridians\n\taddMarkersToScene(numParallels, numMeridians, earth) {\n\t\tlet equatorGeometry = new THREE.CircleGeometry(1, 360);\n\t\tequatorGeometry.vertices.shift();\n\n\t\t// equator\n\t\tlet equatorMesh = new THREE.LineLoop(equatorGeometry, this.state.markerMaterial);\n\t\tequatorMesh.rotation.x = Math.PI/2;\n\t\tearth.add(equatorMesh);\n\n\t\t// parallels\n\t\tfor (let i = 0; i < Math.PI/2; i+= Math.PI/2/(numParallels+1)) {\n\t\t\tlet parallelGeometry = new THREE.CircleGeometry(Math.cos(i), 360);\n\t\t\tparallelGeometry.vertices.shift();\n\t\t\tlet parallelMesh = new THREE.LineLoop(parallelGeometry, this.state.markerMaterial);\n\t\t\tparallelMesh.rotation.x = Math.PI/2;\n\t\t\tparallelMesh.position.y = Math.sin(i);\n\t\t\tearth.add(parallelMesh);\n\n\t\t\tparallelMesh = new THREE.LineLoop(parallelGeometry, this.state.markerMaterial);\n\t\t\tparallelMesh.rotation.x = Math.PI/2;\n\t\t\tparallelMesh.position.y = -Math.sin(i);\n\t\t\tearth.add(parallelMesh);\n\t\t}\n\n\t\t// meridians\n\t\tfor (let i = 0; i < 2*Math.PI; i += 2*Math.PI/numMeridians) {\n\t\t\tlet meridianMesh = new THREE.LineLoop(equatorGeometry, this.state.markerMaterial);\n\t\t\tmeridianMesh.rotation.y = i;\n\t\t\tearth.add(meridianMesh);\n\t\t}\n\t}\n\n\taddBordersToScene(geojson, earth) {\n\t\t// use to find buggy countries\n\t\t//geojson.features = geojson.features.filter(rec => rec.properties.NAME === \"Greenland\");\n\t\t//debugger;\n\n\t\t// every country\n\t\tfor (let i = 0; i < geojson.features.length; i++) {\n\t\t\t//let i = 144;\n\t\t\tlet country = geojson.features[i];\n\n\t\t\t// every unconnected part of the country\n\t\t\tfor (let j = 0; j < country.geometry.coordinates.length; j++) {\n\t\t\t\tlet part;\n\t\t\t\tif (country.geometry.coordinates[0][0][0] instanceof Array) part = country.geometry.coordinates[j][0];\n\t\t\t\telse part = country.geometry.coordinates[j];\n\t\t\t\tlet coordinates = [];\n\n\t\t\t\t// every point of the border of the part\n\t\t\t\t// change the increment in k to skip points when creating borders - improves performance, but hurts straight-line borders like Egypt, Alaska, etc\n\t\t\t\tfor (let k = 0; k < part.length; k++) {\n\t\t\t\t\t//if ((k !== 0 && k !== part.length-1) && (Globe.skipSecondPoint(part[k-1], part[k], part[k+1], 0.00005))) continue; // 0.00001\n\n\t\t\t\t\tlet coords = part[k];\n\t\t\t\t\tlet lat = coords[1] * Math.PI / 180;\n\t\t\t\t\tlet lng = coords[0] * Math.PI / 180;\n\t\t\t\t\tlet point = new THREE.Vector3(Math.sin(lng) * Math.cos(lat), Math.sin(lat), Math.cos(lng) * Math.cos(lat));\n\t\t\t\t\tcoordinates.push(point);\n\t\t\t\t}\n\n\t\t\t\tlet geometry = new THREE.Geometry();\n\t\t\t\tgeometry.vertices = coordinates;\n\t\t\t\tlet line = new THREE.Line(geometry, this.state.borderMaterial);\n\t\t\t\tearth.add(line);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic skipSecondPoint(p1, p2, p3, threshold) {\n\t\tlet x1 = p1[0];\n\t\tlet y1 = p1[1];\n\t\tlet x2 = p2[0];\n\t\tlet y2 = p2[1];\n\t\tlet x3 = p3[0];\n\t\tlet y3 = p3[1];\n\t\tlet x4 = (x2*(x1-x3)/(y3-y1) - x1*(y3-y1)/(x3-x1) + y1 - y2) / ((x1-x3)/(y3-y1) - (y3-y1)/(x3-x1));\n\t\tlet y4 = (y3-y1)/(x3-x1) * (x4-x1) + y1;\n\t\tlet hSquared = (x4-x2)*(x4-x2) + (y4-y2)*(y4-y2);\n\t\t//let bSquared = (x3-x1)*(x3-x1) + (y3-y1)*(y3-y1);\n\t\treturn hSquared/*/bSquared*/ < threshold;\n\t}\n\n\taddStick(lat, lng, length, type) {\n\t\tlet material = this.state.defaultStickMaterial;\n\t\tif (type === \"error\") material = this.state.errorStickMaterial;\n\n\t\tlet geometry = new THREE.BoxGeometry(this.state.stickWidth, this.state.stickWidth, length, 1, 1, 1);\n\t\tlet stickMesh = new THREE.Mesh(geometry, material);\n\t\tlet pivot = new THREE.Object3D();\n\t\tpivot.add(stickMesh);\n\t\tstickMesh.position.set(0, 0, 1 + length/2);\n\n\t\tthis.rotateObjAroundOrigin(pivot, lat, lng);\n\n\t\tthis.gSticks.add(pivot);\n\t}\n\n\taddSticks(sticks) {\n\t\tthis.gScene.remove(this.gSticks);\n\t\tthis.gSticks = new THREE.Group();\n\t\tthis.gScene.add(this.gSticks);\n\n\t\tfor (let i in sticks) {\n\t\t\tlet stick = sticks[i];\n\n\t\t\tthis.addStick(stick.lat, stick.lng, stick.size, stick.type);\n\t\t}\n\n\t\tthis.draw();\n\t}\n\n\trotateObjAroundOrigin(pivot, lat, lng) {\n\t\tGlobe.rotateAroundWorldAxis(pivot, this.state.xAxis, -lat * Math.PI / 180, false);\n\t\tGlobe.rotateAroundWorldAxis(pivot, this.state.yAxis,  lng * Math.PI / 180, true);\n\t}\n\n\tstatic rotateAroundWorldAxis(object, axisNorm, radians, second) {\n\t\tlet rotWorldMatrix = new THREE.Matrix4();\n\t\trotWorldMatrix.makeRotationAxis(axisNorm, radians);\n\t\tif (second) rotWorldMatrix.multiply(object.matrix); // pre-multiply\n\t\tobject.matrix = rotWorldMatrix;\n\t\tobject.rotation.setFromRotationMatrix(object.matrix);\n\t}\n\n\trotateCamera(camera) {\n\t\tlet lng = camera.rot.lng;\n\t\tlet lat = camera.rot.lat;\n\n\t\tthis.rotateObjAroundOrigin(camera.userData.pivot, lat, lng);\n\n\t\t/*camera.position.x = Math.sin(lng) * Math.cos(lat) * camera.distance;\n\t\tcamera.position.y = Math.sin(lat) * camera.distance;\n\t\tcamera.position.z = Math.cos(lng) * Math.cos(lat) * camera.distance;\n\t\tcamera.lookAt(this.state.origin);*/\n\t}\n\n\tstatic screenToGlobeCoords(mouseX, mouseY, camera, earth) {\n\t\tlet mouse = new THREE.Vector2();\n\t\tmouse.x = mouseX*2-1;\n\t\tmouse.y = mouseY*2-1;\n\n\t\tlet raycaster = new THREE.Raycaster();\n\t\traycaster.setFromCamera(mouse, camera);\n\t\tlet intersects = raycaster.intersectObject(earth);\n\t\tif (intersects == null || intersects.length === 0) return;\n\n\t\tlet spherePoint = new THREE.Vector3();\n\t\tspherePoint.x = intersects[0].point.x;\n\t\tspherePoint.y = intersects[0].point.y;\n\t\tspherePoint.z = intersects[0].point.z;\n\n\t\tlet lat = 90 - Math.acos(spherePoint.y) * 180 / Math.PI;\n\t\tlet lng = ((180 + Math.atan2(spherePoint.x, spherePoint.z) * 180 / Math.PI) % 360) - 180;\n\t\treturn {lat: lat, lng: lng};\n\t}\n\n\tasync init() {\n\t\tlet width = this.mount.clientWidth;\n\t\tlet height = this.mount.clientHeight;\n\n\t\tthis.gScene = new THREE.Scene();\n\t\tthis.gCamera = new THREE.PerspectiveCamera(this.props.fovY || 75, width/height, 0.1, 10); // set the far value at 1.55 to not render the back of the globe\n\t\tthis.gCamera.fovX = 2 * Math.atan(Math.tan(this.gCamera.fov / 2 * Math.PI / 180) * this.gCamera.aspect) * 180 / Math.PI;\n\n\t\tthis.gCamera.distance = this.props.zoom + 1 || 2;\n\t\tthis.gCamera.position.z = this.gCamera.distance;\n\t\tthis.gCamera.rot = {lng: 0, lat: 0};\n\t\tthis.gCamera.userData.pivot = new THREE.Object3D();\n\t\tthis.gCamera.userData.pivot.add(this.gCamera);\n\t\tthis.gScene.add(this.gCamera.userData.pivot);\n\n\t\tthis.gRenderer = new THREE.WebGLRenderer({antialias: true});\n\t\tthis.gRenderer.setPixelRatio(window.devicePixelRatio);\n\t\tthis.gRenderer.setSize(width, height);\n\t\tthis.gRenderer.setClearColor(this.props.backgroundColor || 0x000000, 1);\n\n\t\tthis.rotationRate = this.props.rotationRate || 0.1;\n\n\t\t// my own orbitControls, without the problem of unexposed rotate methods\n\t\tthis.isDragging = false;\n\t\tthis.dragPrev = {x: 0, y: 0};\n\n\t\tthis.gRenderer.domElement.addEventListener(\"click\", e => {\n\t\t\tlet coords = Globe.screenToGlobeCoords(e.offsetX/width, (height-e.offsetY)/height, this.gCamera, this.gScene.userData.earth);\n\t\t\tif (coords == null) return;\n\t\t\tthis.props.onGlobeClick(coords);\n\t\t});\n\n\t\tthis.gRenderer.domElement.addEventListener(\"mousedown\", () => this.isDragging = true);\n\t\tthis.gRenderer.domElement.addEventListener(\"mousemove\", e => {\n\t\t\tif (this.isDragging) {\n\t\t\t\tthis.gCamera.rot.lng -= (e.offsetX-this.dragPrev.x)*this.rotationRate;\n\t\t\t\tthis.gCamera.rot.lat += (e.offsetY-this.dragPrev.y)*this.rotationRate;\n\n\t\t\t\tif (this.gCamera.rot.lat > 90) this.gCamera.rot.lat = 90;\n\t\t\t\tif (this.gCamera.rot.lat < -90) this.gCamera.rot.lat = -90;\n\t\t\t\tif (this.gCamera.rot.lng > 180) this.gCamera.rot.lng -= 360;\n\t\t\t\tif (this.gCamera.rot.lng < -180) this.gCamera.rot.lng += 360;\n\n\t\t\t\tthis.rotateCamera(this.gCamera);\n\t\t\t\tthis.draw();\n\t\t\t}\n\n\t\t\tthis.dragPrev = {x: e.offsetX, y: e.offsetY};\n\t\t});\n\n\t\t// not sure if this is anti-pattern TODO figure out if this is anti-pattern\n\t\tdocument.addEventListener(\"mouseup\", () => this.isDragging = false);\n\n\t\tthis.gSticks = new THREE.Group();\n\t\tthis.gScene.add(this.gSticks);\n\n\t\tthis.gScene.add(new THREE.AmbientLight(0xffffff, 1));\n\n\t\tthis.gAnimation = {\n\t\t\tduration: this.props.animationDuration || 1000,\n\t\t\tstartTime: 0,\n\t\t\tstartLoc: {\n\t\t\t\tlat: 0,\n\t\t\t\tlng: 0\n\t\t\t},\n\t\t\tcurProgress: 0,\n\t\t};\n\n\t\t// earth texture\n\t\tlet earth = new THREE.Group();\n\t\tthis.gScene.add(earth);\n\t\tnew THREE.TextureLoader().load(\"data/img/earthnight8k.jpg\", tex => {\n\t\t\tlet geometry = new THREE.SphereGeometry(0.999, 360, 180); // at 0.995, markers are at 32km above sea level\n\t\t\tlet material = new THREE.MeshBasicMaterial({map: tex, overdraw: 0.5/*color: 0x050505*/});\n\t\t\tlet mesh = new THREE.Mesh(geometry, material);\n\t\t\tmesh.rotateY(3*Math.PI/2);\n\t\t\tearth.add(mesh);\n\n\t\t\tearth.userData.object = mesh;\n\n\t\t\tthis.draw();\n\t\t});\n\n\t\t// load borders\n\t\tthis.addBordersToScene(await loadBorders(\"data/maps/worldBorders.json\"), earth);\n\t\tthis.addBordersToScene(await loadBorders(\"data/maps/state/stateBorders.json\"), earth);\n\n\t\tthis.addMarkersToScene(2, 12, earth);\n\n\t\tthis.gScene.userData.earth = earth.userData.object;\n\n\t\tthis.mount.appendChild(this.gRenderer.domElement);\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.init();\n\t\tthis.draw();\n\t}\n\n\t/*shouldComponentUpdate(nextProps, nextState) {\n\t\t/!*return (this.props.focusPoint !== nextProps.focusPoint && nextProps.focusPoint != null)\n\t\t\t|| (this.props.sticks !== nextProps.sticks);*!/\n\t\treturn true;\n\t}*/\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tif (this.props.focusPoint !== prevProps.focusPoint && this.props.focusPoint != null) {\n\t\t\tthis.setState({animating: true});\n\t\t\tthis.gAnimation.startTime = Date.now();\n\n\t\t\tlet startLat = this.gCamera.rot.lat;\n\t\t\tlet startLng = this.gCamera.rot.lng;\n\t\t\tlet stdDist = this.props.focusPoint.lng - startLng;\n\n\t\t\t// just works, no reason to try to figure it out\n\t\t\tif (Math.abs(stdDist) > 180) startLng -= 360;\n\t\t\tstdDist = this.props.focusPoint.lng - startLng;\n\t\t\tif (Math.abs(stdDist) > 180) startLng += 720;\n\n\t\t\tthis.gAnimation.startLoc = {lat: startLat, lng: startLng};\n\t\t\trequestAnimationFrame(this.animate);\n\t\t}\n\n\t\tif (this.props.sticks !== prevProps.sticks) {\n\t\t\tconsole.log(\"start\");\n\t\t\tthis.addSticks(this.props.sticks);\n\t\t\tconsole.log(\"end\");\n\t\t}\n\t}\n\n\tanimate() {\n\t\tlet curTime = Date.now();\n\t\tthis.gAnimation.curProgress = curTime - this.gAnimation.startTime;\n\t\tif (this.gAnimation.curProgress > this.gAnimation.duration) {\n\t\t\tthis.setState({animating: false});\n\t\t\tthis.gAnimation.curProgress = this.gAnimation.duration;\n\t\t}\n\t\tif (this.state.animating) requestAnimationFrame(this.animate);\n\n\t\tlet progress = this.gAnimation.curProgress / this.gAnimation.duration;\n\t\tthis.gCamera.rot.lat = (this.props.focusPoint.lat - this.gAnimation.startLoc.lat) * Globe.d(progress) + this.gAnimation.startLoc.lat;\n\t\tthis.gCamera.rot.lng = (this.props.focusPoint.lng - this.gAnimation.startLoc.lng) * Globe.d(progress) + this.gAnimation.startLoc.lng;\n\n\t\tthis.rotateCamera(this.gCamera);\n\n\t\tthis.draw();\n\t}\n\n\t// TODO find a better name - mathematical functions usually have 1-letter names, but that's discouraged in JS\n\tstatic d(t) {return -2*t*t*(t-1.5);} // cubic relation, maybe experiment with different functions here?\n\n\tdraw() {\n\t\tthis.gRenderer.render(this.gScene, this.gCamera);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"globe-rootDiv\"\n\t\t\t\tref={(r) => this.mount = r}\n\t\t\t/>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Globe from \"./components/Globe\";\n\nclass App extends Component {\n\n\tstate = {\n\t\tsticks: [],\n\t\tfocusPoint: null\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.randomizeSticks = this.randomizeSticks.bind(this);\n\t}\n\n\thandleGlobeChange() {}\n\n\tonGlobeClick(coords) {\n\t\t/*this.setState({sticks: [...this.state.sticks, { // add stick at click location\n\t\t\t\tid: 2,\n\t\t\t\ttype: \"error\",\n\t\t\t\tsize: 0.2,\n\t\t\t\tlat: coords.lat,\n\t\t\t\tlng: coords.lng,\n\t\t}]});*/\n\t}\n\n\tstatic shuffle(b) {\n\t\tlet a = b.slice(0);\n\t\tfor (let i = a.length-1; i > 0; i--) {\n\t\t\tconst j = Math.floor(Math.random() * (i+1));\n\t\t\tif (i === j) continue;\n\t\t\t[a[i], a[j]] = [a[j], a[i]];\n\t\t}\n\t\treturn a;\n\t}\n\n\trandomizeSticks(sticks, total, count) {\n\t\tsticks = App.shuffle(sticks).slice(0, count);\n\t\tsticks = [...sticks, ...this.generateSticks(total-count)];\n\n\t\treturn sticks;\n\t}\n\n\tgenerateStick() {\n\t\treturn {\n\t\t\ttype: Math.random() < 0.2 ? \"error\" : \"normal\",\n\t\t\tsize: Math.random() * 0.3,\n\t\t\tlat: Math.random() * 180 - 90,\n\t\t\tlng: Math.random() * 360 - 180,\n\t\t};\n\t}\n\n\tgenerateSticks(count) {\n\t\tconst sticks = [];\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tsticks.push(this.generateStick());\n\t\t}\n\t\treturn sticks;\n\t}\n\n\tsetupTestEnvironment() {\n\t\tlet sticks = this.randomizeSticks([], 20, 0);\n\t\tthis.setState({sticks});\n\n\t\tsetInterval(() => {\n\t\t\tlet sticks = this.randomizeSticks(this.state.sticks, 20, 10);\n\t\t\tthis.setState({sticks});\n\t\t}, 1000);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setupTestEnvironment();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={{width:\"100%\", height:\"100%\", position:\"absolute\", top:\"0\", left:\"0\"}}>\n\n\t\t\t\t<button onClick={()=>{this.setState({focusPoint: {lat: 44.6, lng: 33.5}})}}>focus</button>\n\t\t\t\t<div style={{width:\"100%\", height:\"100%\", display:\"inline-block\"}}>\n\t\t\t\t\t<Globe\n\t\t\t\t\t\tfocusPoint={this.state.focusPoint}\n\t\t\t\t\t\tsticks={this.state.sticks}\n\t\t\t\t\t\tonChange={this.handleGlobeChange.bind(this)}\n\t\t\t\t\t\tonGlobeClick={this.onGlobeClick.bind(this)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}